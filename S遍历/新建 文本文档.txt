#include <iostream>
#include <stack>
#include <queue>
using namespace std;

struct tree {
    int val;
    tree* left;
    tree* right;
    tree(int value) : val(value), left(nullptr), right(nullptr) {}
};

void maketree(int value, tree*& root) {
    int leftVal, rightVal;
    cin >> leftVal;
    if (leftVal != 0) {
        root->left = new tree(leftVal);
        maketree(leftVal, root->left);
    }
    cin >> rightVal;
    if (rightVal != 0) {
        root->right = new tree(rightVal);
        maketree(rightVal, root->right);
    }
}

void SSearch(tree* root, int a, int b) {
    if (!root) {
        return;
    }
    stack<tree*> s1;
    stack<tree*> s2;

    bool aflag = false;
    bool bflag = false;

    s1.push(root);

    while (!s1.empty() || !s2.empty()) {
        while (!s1.empty()) {
            tree* current = s1.top();
            s1.pop();
            if (current->val == a) {
                aflag = true;
            }
            if (aflag && !bflag) {
                cout << current->val << " ";

                if (current->val == b) {
                    bflag = true;
                    return;
                }
            }
            if (current->right) {
                s2.push(current->right);
            }
            if (current->left) {
                s2.push(current->left);
            }
        }
        while (!s2.empty()) {
            tree* current = s2.top();
            s2.pop();
            if (current->val == a) {
                aflag = true;
            }
            if (aflag && !bflag) {
                cout << current->val << " ";

                if (current->val == b) {
                    bflag = true;
                    return;
                }
            }
            if (current->left) {
                s1.push(current->left);
            }
            if (current->right) {
                s1.push(current->right);
            }
        }
    }
    return;
}

int main() {
    tree* head = nullptr;
    int rootVal;
    cin >> rootVal;
    head = new tree(rootVal);
    maketree(rootVal, head);
    int a, b;
    cin >> a >> b;
    SSearch(head, a, b);
    return 0;
}
