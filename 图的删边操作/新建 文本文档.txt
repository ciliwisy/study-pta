#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
using namespace std;

map<int, vector<pair<int, int>>> graph;

void add(int a, int b, int c) {
    graph[a].push_back({ b,c });
}

void dele(int a, int b) {
    auto p = find_if(graph[a].begin(), graph[a].end(), [b](const pair<int, int>& q) {
        return q.first == b;
        });
    if (p != graph[a].end()) {
        graph[a].erase(p);
    }
}

void print() {
    for (auto p = graph.begin(); p != graph.end(); p++) {
        if (!p->second.empty()) {
            cout << p->first << ':';
            sort(p->second.begin(), p->second.end());
            for (const auto& q : p->second) {
                cout << '(' << p->first << ',' << q.first << ',' << q.second << ')';
            }
            cout << endl;
        }
    }
}

int main() {
    int n = 0;
    int e = 0;
    cin >> n >> e;
    int a, b, c;
    for (int i = 0; i < e; i++) {
        cin >> a >> b >> c;
        add(a, b, c);
    }
    int k;
    cin >> k;
    for (int i = 0; i < k; i++) {
        cin >> a >> b;
        dele(a,b);
    }
    print();

    return 0;
}
